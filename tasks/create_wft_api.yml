# tasks file for creating a workflow template
# when looped through `wf_to_create` should be used as a loop var

- name: Get ID of uuc org
  uri:
    headers:
      Content-type: application/json
      Accept: application/json
    method: GET
    user: "{{ lookup('env', 'TOWER_USERNAME') }}"
    password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    url: "{{ lookup('env', 'TOWER_HOST') }}/api/v2/organizations/?name=uuc"
    force_basic_auth: yes
  register: org_id_query

- fail:
    msg: Organization with name 'uuc' not found
  when: org_id_query.json.results == []

- name: Get workflow template ID
  uri:
    headers:
      Content-type: application/json
      Accept: application/json
    method: GET
    user: "{{ lookup('env', 'TOWER_USERNAME') }}"
    password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    url: "{{ lookup('env', 'TOWER_HOST') }}/api/v2/workflow_job_templates/?name={{ wf_to_create.name }}"
    force_basic_auth: yes
  register: wf_id_query

- name: Save workflow template ID
  set_fact:
    wf_id: "{{ (wf_id_query.json.results | selectattr('name', '==', wf_to_create.name) | list).0.id
      | default('') }}"

- name: Get inventory ID
  uri:
    headers:
      Content-type: application/json
      Accept: application/json
    method: GET
    user: "{{ lookup('env', 'TOWER_USERNAME') }}"
    password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    url: "{{ lookup('env', 'TOWER_HOST') }}/api/v2/inventories/?name={{ wf_to_create.inventory }}"
    force_basic_auth: yes
  register: inventory_id_query
  when:
    - wf_to_create.inventory is defined
    - wf_to_create.inventory is not none
    - wf_to_create.inventory != ''

- fail:
    msg: No inventory with name "{{ wf_to_create.inventory }}" found
  when:
    - wf_to_create.inventory is defined
    - wf_to_create.inventory is not none
    - wf_to_create.inventory != ''
    - inventory_id_query.json.results == []

- name: Create workflow template
  uri:
    headers:
      Content-type: application/json
      Accept: application/json
    method: POST
    user: "{{ lookup('env', 'TOWER_USERNAME') }}"
    password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    url: "{{ lookup('env', 'TOWER_HOST') }}/api/v2/workflow_job_templates/"
    force_basic_auth: yes
    status_code:
      - 201
    body_format: json
    body: >
      {
        "name": "{{ wf_to_create.name }}",
        "description": "{{ wf_to_create.description }}",
        "inventory": {{ inventory_id_query.json.results.0.id | default('null') }},
        "limit": "{{ wf_to_create.limit }}",
        "organization": {{ org_id_query.json.results.0.id }},

        "ask_extra_vars_on_launch": {{ 'true' if wf_to_create.ask_extra_vars |
            default(False) | bool else 'false' }},
        "ask_inventory_on_launch": {{ 'true' if wf_to_create.ask_inventory |
            default(False) | bool else 'false' }},
        "ask_limit_on_launch": {{ 'true' if wf_to_create.ask_limit |
            default(False) | bool else 'false' }},

        "survey_enabled": {{ 'true' if wf_to_create.survey_enabled |
            default(False) | bool else 'false' }},

        "extra_vars": "{{ wf_to_create.extra_vars | default({}) | to_json }}"
      }
  when: wf_id == ''
  changed_when: true

- name: Modify existing workflow template
  uri:
    headers:
      Content-type: application/json
      Accept: application/json
    method: PATCH
    user: "{{ lookup('env', 'TOWER_USERNAME') }}"
    password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    url: "{{ lookup('env', 'TOWER_HOST') }}/api/v2/workflow_job_templates/{{ wf_id }}/"
    force_basic_auth: yes
    status_code:
      - 200
    body_format: json
    body: >
      {
        "name": "{{ wf_to_create.name }}",
        "description": "{{ wf_to_create.description }}",
        "inventory": {{ inventory_id_query.json.results.0.id | default('null') }},
        "limit": "{{ wf_to_create.limit }}",
        "organization": {{ org_id_query.json.results.0.id }},

        "ask_extra_vars_on_launch": {{ 'true' if wf_to_create.ask_extra_vars |
            default(False) | bool else 'false' }},
        "ask_inventory_on_launch": {{ 'true' if wf_to_create.ask_inventory |
            default(False) | bool else 'false' }},
        "ask_limit_on_launch": {{ 'true' if wf_to_create.ask_limit |
            default(False) | bool else 'false' }},

        "survey_enabled": {{ 'true' if wf_to_create.survey_enabled |
            default(False) | bool else 'false' }},

        "extra_vars": "{{ wf_to_create.extra_vars | default({}) | to_json }}"
      }
  when: wf_id != ''
  changed_when: true

- name: Get newly created workflow template ID
  uri:
    headers:
      Content-type: application/json
      Accept: application/json
    method: GET
    user: "{{ lookup('env', 'TOWER_USERNAME') }}"
    password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    url: "{{ lookup('env', 'TOWER_HOST') }}/api/v2/workflow_job_templates/?name={{ wf_to_create.name }}"
    force_basic_auth: yes
  register: wf_id_query
  when: wf_id == ''

- name: Save newly created workflow template ID
  set_fact:
    wf_id: "{{ (wf_id_query.json.results | selectattr('name', '==', wf_to_create.name) | list).0.id
      | default('') }}"
  when: wf_id == ''

- name: Modify workflow template survey
  uri:
    headers:
      Content-type: application/json
      Accept: application/json
    method: POST
    user: "{{ lookup('env', 'TOWER_USERNAME') }}"
    password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    url: "{{ lookup('env', 'TOWER_HOST') }}/api/v2/workflow_job_templates/{{ wf_id }}/survey_spec/"
    force_basic_auth: yes
    status_code:
      - 200
    body_format: json
    body: "{{ wf_to_create.survey_spec }}"
  changed_when: true
  when:
    - wf_to_create.survey_spec is defined
    - wf_to_create.survey_spec is not none
    - wf_to_create.survey_spec != {}

- name: Delete workflow template survey
  uri:
    headers:
      Content-type: application/json
      Accept: application/json
    method: DELETE
    user: "{{ lookup('env', 'TOWER_USERNAME') }}"
    password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    url: "{{ lookup('env', 'TOWER_HOST') }}/api/v2/workflow_job_templates/{{ wf_id }}/survey_spec/"
    force_basic_auth: yes
    status_code:
      - 200
  changed_when: true
  when: >-
    wf_to_create.survey_spec is not defined
    or wf_to_create.survey_spec is none
    or wf_to_create.survey_spec == {}

- name: Assign Admin role to teams
  tower_role:
    tower_host: "{{ lookup('env', 'TOWER_HOST') }}"
    tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
    tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    state: present

    workflow: "{{ wf_to_create.name }}"
    role: admin
    team: "{{ item }}"
  loop: "{{ wf_to_create.teams.admin | default([]) }}"

- name: Assign Read role to teams
  tower_role:
    tower_host: "{{ lookup('env', 'TOWER_HOST') }}"
    tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
    tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    state: present

    workflow: "{{ wf_to_create.name }}"
    role: read
    team: "{{ item }}"
  loop: "{{ wf_to_create.teams.read | default([]) }}"

- name: Assign Execute role to teams
  tower_role:
    tower_host: "{{ lookup('env', 'TOWER_HOST') }}"
    tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
    tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    state: present

    workflow: "{{ wf_to_create.name }}"
    role: execute
    team: "{{ item }}"
  loop: "{{ wf_to_create.teams.execute | default([]) }}"

- name: Assign Approve role to teams
  tower_role:
    tower_host: "{{ lookup('env', 'TOWER_HOST') }}"
    tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
    tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    state: present

    workflow: "{{ wf_to_create.name }}"
    role: approval
    team: "{{ item }}"
  loop: "{{ wf_to_create.teams.approve | default([]) }}"

- name: Create workflow nodes
  include_tasks: tasks/create_wf_node_api.yml
  loop: "{{ wf_to_create.workflow_nodes }}"
  loop_control:
    loop_var: wf_node_to_create

- name: Get IDs of all workflow nodes
  uri:
    headers:
      Content-type: application/json
      Accept: application/json
    method: GET
    user: "{{ lookup('env', 'TOWER_USERNAME') }}"
    password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    url: "{{ lookup('env', 'TOWER_HOST') }}/api/v2/workflow_job_templates/{{ wf_id }}/workflow_nodes/"
    force_basic_auth: yes
  register: wf_nodes_query

- name: Remove all workflow nodes not defined in configuration
  uri:
    headers:
      Content-type: application/json
      Accept: application/json
    method: DELETE
    user: "{{ lookup('env', 'TOWER_USERNAME') }}"
    password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    url: "{{ lookup('env', 'TOWER_HOST') }}/api/v2/workflow_job_template_nodes/{{ item }}/"
    force_basic_auth: yes
    status_code:
      - 204
  changed_when: true
  loop: >
    {{ wf_nodes_query.json.results | map(attribute='id') | map('string') | list
    | difference( wf_node_id_map.values() | list ) }}

- name: Remove workflow node associations not defined in config
  include_tasks: tasks/remove_wf_node_chain_api.yml
  loop: "{{ wf_to_create.workflow_nodes }}"
  loop_control:
    loop_var: wf_node_to_create

- name: Build workflow node chain
  include_tasks: tasks/create_wf_node_chain_api.yml
  loop: "{{ wf_to_create.workflow_nodes }}"
  loop_control:
    loop_var: wf_node_to_create
